/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import connect.PortReader;
import java.awt.Font;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.LinkedList;
import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.Timer;
import javax.swing.UIManager;
import ui.ColourPalatte;
import ui.Notification;
import workers.BackgroundWorker;
import workers.CanvasPanelWorker;
import workers.GraphPanelWorker;

/**
 *
 * @author Ivantha
 */
public class Dashboard extends javax.swing.JFrame {

    private BackgroundWorker backgroundWorker = null;
    private CanvasPanelWorker leftCanvasPanelWorker = null;
    private CanvasPanelWorker rightCanvasPanelWorker = null;
    private GraphPanelWorker leftGraphPanelWorker = null;
    private GraphPanelWorker rightGraphPanelWorker = null;
    Timer leftHandTimer;
    Timer rightHandTimer;
    private static boolean portReaderNotStarted = true;

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();

        this.rightGraphPanel.setIsLeftGraphPanel(false);

        this.dashboardPanel.setBackground(ColourPalatte.VERY_DARK_BLUE);
        Dashboard.statusLabel.setBackground(ColourPalatte.BRIGHT_WHITE);
        this.ribbonTabbedPane.setBackgroundAt(0, ColourPalatte.PALE_WHITE);
        this.ribbonTabbedPane.setBackgroundAt(1, ColourPalatte.PALE_WHITE);

        //Tabs
        ribbonTabbedPane.addTab("<html><body><table>Left</table></body></html>", this.leftSensorPanel);
        ribbonTabbedPane.addTab("<html><body><table>Right</table></body></html>", this.rightSensorPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphPanel1 = new ui.panels.GraphPanel();
        dashboardPanel = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        leftBackgroundPanel1 = new ui.panels.LeftBackgroundPanel();
        leftCanvasPanel = new ui.panels.LeftCanvasPanel();
        leftScrollPane = new javax.swing.JScrollPane();
        leftGraphPanel = new ui.panels.GraphPanel();
        rightPanel = new javax.swing.JPanel();
        rightBackgroundPanel1 = new ui.panels.RightBackgroundPanel();
        rightCanvasPanel = new ui.panels.RightCanvasPanel();
        rightScrollPane = new javax.swing.JScrollPane();
        rightGraphPanel = new ui.panels.GraphPanel();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        lockCheckBox = new javax.swing.JCheckBox();
        ribbonTabbedPane = new javax.swing.JTabbedPane();
        rightSensorPanel = new javax.swing.JPanel();
        r9CheckBox = new javax.swing.JCheckBox();
        r6CheckBox = new javax.swing.JCheckBox();
        r5CheckBox = new javax.swing.JCheckBox();
        r2CheckBox = new javax.swing.JCheckBox();
        r17CheckBox = new javax.swing.JCheckBox();
        r15CheckBox = new javax.swing.JCheckBox();
        r12CheckBox = new javax.swing.JCheckBox();
        r4CheckBox = new javax.swing.JCheckBox();
        r13CheckBox = new javax.swing.JCheckBox();
        r1CheckBox = new javax.swing.JCheckBox();
        r10CheckBox = new javax.swing.JCheckBox();
        r14CheckBox = new javax.swing.JCheckBox();
        r16CheckBox = new javax.swing.JCheckBox();
        r8CheckBox = new javax.swing.JCheckBox();
        r18CheckBox = new javax.swing.JCheckBox();
        r7CheckBox = new javax.swing.JCheckBox();
        r3CheckBox = new javax.swing.JCheckBox();
        r11CheckBox = new javax.swing.JCheckBox();
        rResultantCheckBox1 = new javax.swing.JCheckBox();
        leftSensorPanel = new javax.swing.JPanel();
        l1CheckBox = new javax.swing.JCheckBox();
        l2CheckBox = new javax.swing.JCheckBox();
        l3CheckBox = new javax.swing.JCheckBox();
        l4CheckBox = new javax.swing.JCheckBox();
        l5CheckBox = new javax.swing.JCheckBox();
        l6CheckBox = new javax.swing.JCheckBox();
        l7CheckBox = new javax.swing.JCheckBox();
        l8CheckBox = new javax.swing.JCheckBox();
        l9CheckBox = new javax.swing.JCheckBox();
        l10CheckBox = new javax.swing.JCheckBox();
        l11CheckBox = new javax.swing.JCheckBox();
        l12CheckBox = new javax.swing.JCheckBox();
        l13CheckBox = new javax.swing.JCheckBox();
        l14CheckBox = new javax.swing.JCheckBox();
        l15CheckBox = new javax.swing.JCheckBox();
        l16CheckBox = new javax.swing.JCheckBox();
        l17CheckBox = new javax.swing.JCheckBox();
        l18CheckBox = new javax.swing.JCheckBox();
        lResultantCheckBox = new javax.swing.JCheckBox();
        videoFeedPanel = new javax.swing.JPanel();
        webcamPanel = new ui.panels.WebcamPanel();
        jLabel1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        graphPanel1.setOpaque(false);

        javax.swing.GroupLayout graphPanel1Layout = new javax.swing.GroupLayout(graphPanel1);
        graphPanel1.setLayout(graphPanel1Layout);
        graphPanel1Layout.setHorizontalGroup(
            graphPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        graphPanel1Layout.setVerticalGroup(
            graphPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FSR400 Pressure Analyzer");
        setResizable(false);

        statusLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        statusLabel.setText("<status>");
        statusLabel.setOpaque(true);

        leftPanel.setOpaque(false);
        leftPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftCanvasPanel.setOpaque(false);

        javax.swing.GroupLayout leftCanvasPanelLayout = new javax.swing.GroupLayout(leftCanvasPanel);
        leftCanvasPanel.setLayout(leftCanvasPanelLayout);
        leftCanvasPanelLayout.setHorizontalGroup(
            leftCanvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );
        leftCanvasPanelLayout.setVerticalGroup(
            leftCanvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 393, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout leftBackgroundPanel1Layout = new javax.swing.GroupLayout(leftBackgroundPanel1);
        leftBackgroundPanel1.setLayout(leftBackgroundPanel1Layout);
        leftBackgroundPanel1Layout.setHorizontalGroup(
            leftBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftBackgroundPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(leftCanvasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        leftBackgroundPanel1Layout.setVerticalGroup(
            leftBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftBackgroundPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(leftCanvasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        leftPanel.add(leftBackgroundPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 0, -1, -1));

        leftScrollPane.setBorder(null);
        leftScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        leftScrollPane.setMaximumSize(new java.awt.Dimension(400, 250));
        leftScrollPane.setMinimumSize(new java.awt.Dimension(400, 250));
        leftScrollPane.setPreferredSize(new java.awt.Dimension(400, 250));
        leftScrollPane.getHorizontalScrollBar().setUnitIncrement(16);

        javax.swing.GroupLayout leftGraphPanelLayout = new javax.swing.GroupLayout(leftGraphPanel);
        leftGraphPanel.setLayout(leftGraphPanelLayout);
        leftGraphPanelLayout.setHorizontalGroup(
            leftGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        leftGraphPanelLayout.setVerticalGroup(
            leftGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 252, Short.MAX_VALUE)
        );

        leftScrollPane.setViewportView(leftGraphPanel);

        leftPanel.add(leftScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 393, -1, 269));

        rightPanel.setOpaque(false);
        rightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rightCanvasPanel.setOpaque(false);

        javax.swing.GroupLayout rightCanvasPanelLayout = new javax.swing.GroupLayout(rightCanvasPanel);
        rightCanvasPanel.setLayout(rightCanvasPanelLayout);
        rightCanvasPanelLayout.setHorizontalGroup(
            rightCanvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );
        rightCanvasPanelLayout.setVerticalGroup(
            rightCanvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 393, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout rightBackgroundPanel1Layout = new javax.swing.GroupLayout(rightBackgroundPanel1);
        rightBackgroundPanel1.setLayout(rightBackgroundPanel1Layout);
        rightBackgroundPanel1Layout.setHorizontalGroup(
            rightBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightBackgroundPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(rightCanvasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        rightBackgroundPanel1Layout.setVerticalGroup(
            rightBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightBackgroundPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(rightCanvasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        rightPanel.add(rightBackgroundPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 0, -1, -1));

        rightScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        rightScrollPane.setMaximumSize(new java.awt.Dimension(400, 250));
        rightScrollPane.setMinimumSize(new java.awt.Dimension(400, 250));
        rightScrollPane.setPreferredSize(new java.awt.Dimension(400, 250));
        rightScrollPane.getHorizontalScrollBar().setUnitIncrement(16);

        rightGraphPanel.setOpaque(false);

        javax.swing.GroupLayout rightGraphPanelLayout = new javax.swing.GroupLayout(rightGraphPanel);
        rightGraphPanel.setLayout(rightGraphPanelLayout);
        rightGraphPanelLayout.setHorizontalGroup(
            rightGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        rightGraphPanelLayout.setVerticalGroup(
            rightGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        rightScrollPane.setViewportView(rightGraphPanel);

        rightPanel.add(rightScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 393, -1, 267));

        startButton.setText("Start");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                startButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                startButtonMouseExited(evt);
            }
        });
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stopButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stopButtonMouseExited(evt);
            }
        });
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        exportButton.setText("Export");
        exportButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exportButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exportButtonMouseExited(evt);
            }
        });
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveButtonMouseExited(evt);
            }
        });
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitButtonMouseExited(evt);
            }
        });
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        lockCheckBox.setText("LOCK");
        lockCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockCheckBoxActionPerformed(evt);
            }
        });

        rightSensorPanel.setOpaque(false);

        r9CheckBox.setText("Sensor 9");
        r9CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r9CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r9CheckBoxActionPerformed(evt);
            }
        });

        r6CheckBox.setText("Sensor 6");
        r6CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r6CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r6CheckBoxActionPerformed(evt);
            }
        });

        r5CheckBox.setText("Sensor 5");
        r5CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r5CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r5CheckBoxActionPerformed(evt);
            }
        });

        r2CheckBox.setText("Sensor 2");
        r2CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r2CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2CheckBoxActionPerformed(evt);
            }
        });

        r17CheckBox.setText("Sensor 17");
        r17CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r17CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r17CheckBoxActionPerformed(evt);
            }
        });

        r15CheckBox.setText("Sensor 15");
        r15CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r15CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r15CheckBoxActionPerformed(evt);
            }
        });

        r12CheckBox.setText("Sensor 12");
        r12CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r12CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r12CheckBoxActionPerformed(evt);
            }
        });

        r4CheckBox.setText("Sensor 4");
        r4CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r4CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r4CheckBoxActionPerformed(evt);
            }
        });

        r13CheckBox.setText("Sensor 13");
        r13CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r13CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r13CheckBoxActionPerformed(evt);
            }
        });

        r1CheckBox.setText("Sensor 1");
        r1CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r1CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1CheckBoxActionPerformed(evt);
            }
        });

        r10CheckBox.setText("Sensor 10");
        r10CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r10CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r10CheckBoxActionPerformed(evt);
            }
        });

        r14CheckBox.setText("Sensor 14");
        r14CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r14CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r14CheckBoxActionPerformed(evt);
            }
        });

        r16CheckBox.setText("Sensor 16");
        r16CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r16CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r16CheckBoxActionPerformed(evt);
            }
        });

        r8CheckBox.setText("Sensor 8");
        r8CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r8CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r8CheckBoxActionPerformed(evt);
            }
        });

        r18CheckBox.setText("Sensor 18");
        r18CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r18CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r18CheckBoxActionPerformed(evt);
            }
        });

        r7CheckBox.setText("Sensor 7");
        r7CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r7CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r7CheckBoxActionPerformed(evt);
            }
        });

        r3CheckBox.setText("Sensor 3");
        r3CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r3CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3CheckBoxActionPerformed(evt);
            }
        });

        r11CheckBox.setText("Sensor 11");
        r11CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        r11CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r11CheckBoxActionPerformed(evt);
            }
        });

        rResultantCheckBox1.setText("Resultant");
        rResultantCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rResultantCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rightSensorPanelLayout = new javax.swing.GroupLayout(rightSensorPanel);
        rightSensorPanel.setLayout(rightSensorPanelLayout);
        rightSensorPanelLayout.setHorizontalGroup(
            rightSensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightSensorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightSensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightSensorPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(rResultantCheckBox1))
                    .addComponent(r18CheckBox)
                    .addComponent(r17CheckBox)
                    .addComponent(r16CheckBox)
                    .addComponent(r15CheckBox)
                    .addComponent(r14CheckBox)
                    .addComponent(r13CheckBox)
                    .addComponent(r12CheckBox)
                    .addComponent(r11CheckBox)
                    .addComponent(r8CheckBox)
                    .addComponent(r7CheckBox)
                    .addComponent(r6CheckBox)
                    .addComponent(r5CheckBox)
                    .addComponent(r4CheckBox)
                    .addComponent(r3CheckBox)
                    .addComponent(r2CheckBox)
                    .addComponent(r1CheckBox)
                    .addComponent(r10CheckBox)
                    .addComponent(r9CheckBox))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        rightSensorPanelLayout.setVerticalGroup(
            rightSensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightSensorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(r1CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r2CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r3CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r4CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r5CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r6CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r7CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r8CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r9CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r10CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r11CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r12CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r13CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r14CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r15CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r16CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r17CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r18CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rResultantCheckBox1)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        ribbonTabbedPane.addTab("Right", rightSensorPanel);

        leftSensorPanel.setOpaque(false);

        l1CheckBox.setText("Sensor 1");
        l1CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l1CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l1CheckBoxActionPerformed(evt);
            }
        });

        l2CheckBox.setText("Sensor 2");
        l2CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l2CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l2CheckBoxActionPerformed(evt);
            }
        });

        l3CheckBox.setText("Sensor 3");
        l3CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l3CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l3CheckBoxActionPerformed(evt);
            }
        });

        l4CheckBox.setText("Sensor 4");
        l4CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l4CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l4CheckBoxActionPerformed(evt);
            }
        });

        l5CheckBox.setText("Sensor 5");
        l5CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l5CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l5CheckBoxActionPerformed(evt);
            }
        });

        l6CheckBox.setText("Sensor 6");
        l6CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l6CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l6CheckBoxActionPerformed(evt);
            }
        });

        l7CheckBox.setText("Sensor 7");
        l7CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l7CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l7CheckBoxActionPerformed(evt);
            }
        });

        l8CheckBox.setText("Sensor 8");
        l8CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l8CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l8CheckBoxActionPerformed(evt);
            }
        });

        l9CheckBox.setText("Sensor 9");
        l9CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l9CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l9CheckBoxActionPerformed(evt);
            }
        });

        l10CheckBox.setText("Sensor 10");
        l10CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l10CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l10CheckBoxActionPerformed(evt);
            }
        });

        l11CheckBox.setText("Sensor 11");
        l11CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l11CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l11CheckBoxActionPerformed(evt);
            }
        });

        l12CheckBox.setText("Sensor 12");
        l12CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l12CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l12CheckBoxActionPerformed(evt);
            }
        });

        l13CheckBox.setText("Sensor 13");
        l13CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l13CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l13CheckBoxActionPerformed(evt);
            }
        });

        l14CheckBox.setText("Sensor 14");
        l14CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l14CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l14CheckBoxActionPerformed(evt);
            }
        });

        l15CheckBox.setText("Sensor 15");
        l15CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l15CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l15CheckBoxActionPerformed(evt);
            }
        });

        l16CheckBox.setText("Sensor 16");
        l16CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l16CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l16CheckBoxActionPerformed(evt);
            }
        });

        l17CheckBox.setText("Sensor 17");
        l17CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l17CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l17CheckBoxActionPerformed(evt);
            }
        });

        l18CheckBox.setText("Sensor 18");
        l18CheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        l18CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l18CheckBoxActionPerformed(evt);
            }
        });

        lResultantCheckBox.setText("Resultant");
        lResultantCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lResultantCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftSensorPanelLayout = new javax.swing.GroupLayout(leftSensorPanel);
        leftSensorPanel.setLayout(leftSensorPanelLayout);
        leftSensorPanelLayout.setHorizontalGroup(
            leftSensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftSensorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftSensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftSensorPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lResultantCheckBox))
                    .addComponent(l18CheckBox)
                    .addComponent(l17CheckBox)
                    .addComponent(l16CheckBox)
                    .addComponent(l15CheckBox)
                    .addComponent(l14CheckBox)
                    .addComponent(l13CheckBox)
                    .addComponent(l12CheckBox)
                    .addComponent(l11CheckBox)
                    .addComponent(l9CheckBox)
                    .addComponent(l10CheckBox)
                    .addComponent(l8CheckBox)
                    .addComponent(l7CheckBox)
                    .addComponent(l6CheckBox)
                    .addComponent(l5CheckBox)
                    .addComponent(l4CheckBox)
                    .addComponent(l3CheckBox)
                    .addComponent(l2CheckBox)
                    .addComponent(l1CheckBox))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        leftSensorPanelLayout.setVerticalGroup(
            leftSensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftSensorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l1CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l2CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l3CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l4CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l5CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l6CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l7CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l8CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l9CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l10CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l11CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l12CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l13CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l14CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l15CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l16CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l17CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l18CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lResultantCheckBox)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        ribbonTabbedPane.addTab("Left", leftSensorPanel);

        videoFeedPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        videoFeedPanel.setOpaque(false);

        webcamPanel.setBackground(new java.awt.Color(0, 0, 0));
        webcamPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("<invalid input>");

        javax.swing.GroupLayout webcamPanelLayout = new javax.swing.GroupLayout(webcamPanel);
        webcamPanel.setLayout(webcamPanelLayout);
        webcamPanelLayout.setHorizontalGroup(
            webcamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webcamPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        webcamPanelLayout.setVerticalGroup(
            webcamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webcamPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSlider1.setPaintTicks(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/pay_dark.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setOpaque(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/play_light.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/fast_forward_dark.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setOpaque(false);
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/fast_forward_light.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/rewind_dark.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.setOpaque(false);
        jButton3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/rewind_light.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/stop_dark.png"))); // NOI18N
        jButton4.setBorder(null);
        jButton4.setOpaque(false);
        jButton4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/stop_light.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/pause_dark.png"))); // NOI18N
        jButton5.setBorder(null);
        jButton5.setOpaque(false);
        jButton5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/icons/pause_light.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout videoFeedPanelLayout = new javax.swing.GroupLayout(videoFeedPanel);
        videoFeedPanel.setLayout(videoFeedPanelLayout);
        videoFeedPanelLayout.setHorizontalGroup(
            videoFeedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(videoFeedPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(videoFeedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(webcamPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
            .addGroup(videoFeedPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        videoFeedPanelLayout.setVerticalGroup(
            videoFeedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(videoFeedPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(webcamPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(videoFeedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
        dashboardPanel.setLayout(dashboardPanelLayout);
        dashboardPanelLayout.setHorizontalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1362, Short.MAX_VALUE)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(videoFeedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lockCheckBox)
                    .addComponent(ribbonTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        dashboardPanelLayout.setVerticalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardPanelLayout.createSequentialGroup()
                        .addComponent(lockCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ribbonTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addGroup(dashboardPanelLayout.createSequentialGroup()
                        .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(videoFeedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dashboardPanelLayout.createSequentialGroup()
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static boolean isPortReaderNotStarted() {
        return portReaderNotStarted;
    }

    public static void setPortReaderNotStarted(boolean portReaderNotStarted) {
        Dashboard.portReaderNotStarted = portReaderNotStarted;
    }
    
    private void startButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseEntered
        this.startButton.setBackground(ColourPalatte.LIGHT_BLUE);
        this.startButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.startButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_startButtonMouseEntered

    private void startButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseExited
        this.startButton.setBackground(ColourPalatte.DARK_BLUE);
        this.startButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.startButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_startButtonMouseExited

    private void stopButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseEntered
        this.stopButton.setBackground(ColourPalatte.LIGHT_BLUE);
        this.stopButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.stopButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_stopButtonMouseEntered

    private void stopButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseExited
        this.stopButton.setBackground(ColourPalatte.DARK_BLUE);
        this.stopButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.stopButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_stopButtonMouseExited

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
//        Random sensor values
        if ((backgroundWorker == null || backgroundWorker.isCancelled())) {
            backgroundWorker = new BackgroundWorker();
            backgroundWorker.execute();
        }
        
//        Reading from port
//        if (portReaderNotStarted) {
//            PortReader portReader = new PortReader(); 
//            portReader.startReading();
//        }
        
        
//        if ((leftCanvasPanelWorker == null || leftCanvasPanelWorker.isCancelled())) {
//            leftCanvasPanelWorker = new CanvasPanelWorker(this.leftCanvasPanel);
//            leftCanvasPanelWorker.execute();
//        }
//        if ((rightCanvasPanelWorker == null || rightCanvasPanelWorker.isCancelled())) {
//            rightCanvasPanelWorker = new CanvasPanelWorker(this.rightCanvasPanel);
//            rightCanvasPanelWorker.execute();
//        }
//        if ((leftGraphPanelWorker == null || leftGraphPanelWorker.isCancelled())) {
//            leftGraphPanelWorker = new GraphPanelWorker(this.leftGraphPanel);
//            leftGraphPanelWorker.execute();
//        }
//        if ((rightGraphPanelWorker == null || rightGraphPanelWorker.isCancelled())) {
//            rightGraphPanelWorker = new GraphPanelWorker(this.rightGraphPanel);
//            rightGraphPanelWorker.execute();
//        } 

        leftHandTimer = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Dashboard.this.leftCanvasPanel.repaint();
                Dashboard.this.leftGraphPanel.repaint();
            }
        });
        leftHandTimer.start();

        rightHandTimer = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Dashboard.this.rightCanvasPanel.repaint();
                Dashboard.this.rightGraphPanel.repaint();
            }
        });
        rightHandTimer.start();

    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        Notification.display("Stopped reading sensor values");

        backgroundWorker.cancel(true);

//        leftCanvasPanelWorker.cancel(true);
//        rightCanvasPanelWorker.cancel(true);
//        leftGraphPanelWorker.cancel(true);
//        rightGraphPanelWorker.cancel(true);
        if (leftHandTimer.isRunning()) {
            leftHandTimer.stop();
        }
        if (rightHandTimer.isRunning()) {
            rightHandTimer.stop();
        }
    }//GEN-LAST:event_stopButtonActionPerformed

    private void exportButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportButtonMouseEntered
        this.exportButton.setBackground(ColourPalatte.LIGHT_BLUE);
        this.exportButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.exportButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_exportButtonMouseEntered

    private void exportButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportButtonMouseExited
        this.exportButton.setBackground(ColourPalatte.DARK_BLUE);
        this.exportButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.exportButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_exportButtonMouseExited

    private void saveButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseEntered
        this.saveButton.setBackground(ColourPalatte.LIGHT_BLUE);
        this.saveButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.saveButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_saveButtonMouseEntered

    private void saveButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseExited
        this.saveButton.setBackground(ColourPalatte.DARK_BLUE);
        this.saveButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.saveButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_saveButtonMouseExited

    private void exitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseEntered
        this.exitButton.setBackground(ColourPalatte.LIGHT_BLUE);
        this.exitButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.exitButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_exitButtonMouseEntered

    private void exitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseExited
        this.exitButton.setBackground(ColourPalatte.DARK_BLUE);
        this.exitButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.exitButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_exitButtonMouseExited

    private void lockCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockCheckBoxActionPerformed
        if (this.lockCheckBox.isSelected()) {
            if (this.ribbonTabbedPane.getSelectedIndex() == 0) {
                this.ribbonTabbedPane.setEnabledAt(1, false);
                this.ribbonTabbedPane.setBackgroundAt(1, ColourPalatte.ORANGE);
            } else {
                this.ribbonTabbedPane.setEnabledAt(0, false);
                this.ribbonTabbedPane.setBackgroundAt(0, ColourPalatte.ORANGE);
            }

        } else {
            this.ribbonTabbedPane.setEnabledAt(0, true);
            this.ribbonTabbedPane.setBackgroundAt(0, ColourPalatte.PALE_WHITE);
            this.ribbonTabbedPane.setEnabledAt(1, true);
            this.ribbonTabbedPane.setBackgroundAt(1, ColourPalatte.PALE_WHITE);
        }
    }//GEN-LAST:event_lockCheckBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Notification.display("Function is not yet implemented");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Notification.display("Function is not yet implemented");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Notification.display("Function is not yet implemented");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Notification.display("Function is not yet implemented");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Notification.display("Function is not yet implemented");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        Notification.display("Function is not yet implemented");
    }//GEN-LAST:event_saveButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        Notification.display("Function is not yet implemented");
    }//GEN-LAST:event_exportButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void l1CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l1CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 1);
    }//GEN-LAST:event_l1CheckBoxActionPerformed

    private void l2CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l2CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 2);
    }//GEN-LAST:event_l2CheckBoxActionPerformed

    private void l3CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l3CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 3);
    }//GEN-LAST:event_l3CheckBoxActionPerformed

    private void l4CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l4CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 4);
    }//GEN-LAST:event_l4CheckBoxActionPerformed

    private void l5CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l5CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 5);
    }//GEN-LAST:event_l5CheckBoxActionPerformed

    private void l6CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l6CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 6);
    }//GEN-LAST:event_l6CheckBoxActionPerformed

    private void l7CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l7CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 7);
    }//GEN-LAST:event_l7CheckBoxActionPerformed

    private void l8CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l8CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 8);
    }//GEN-LAST:event_l8CheckBoxActionPerformed

    private void l9CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l9CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 9);
    }//GEN-LAST:event_l9CheckBoxActionPerformed

    private void l10CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l10CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 10);
    }//GEN-LAST:event_l10CheckBoxActionPerformed

    private void l11CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l11CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 11);
    }//GEN-LAST:event_l11CheckBoxActionPerformed

    private void l12CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l12CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 12);
    }//GEN-LAST:event_l12CheckBoxActionPerformed

    private void l13CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l13CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 13);
    }//GEN-LAST:event_l13CheckBoxActionPerformed

    private void l14CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l14CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 14);
    }//GEN-LAST:event_l14CheckBoxActionPerformed

    private void l15CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l15CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 15);
    }//GEN-LAST:event_l15CheckBoxActionPerformed

    private void l16CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l16CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 16);
    }//GEN-LAST:event_l16CheckBoxActionPerformed

    private void l17CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l17CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 17);
    }//GEN-LAST:event_l17CheckBoxActionPerformed

    private void l18CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l18CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 18);
    }//GEN-LAST:event_l18CheckBoxActionPerformed

    private void r1CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 1);
    }//GEN-LAST:event_r1CheckBoxActionPerformed

    private void r2CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 2);
    }//GEN-LAST:event_r2CheckBoxActionPerformed

    private void r3CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 3);
    }//GEN-LAST:event_r3CheckBoxActionPerformed

    private void r4CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r4CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 4);
    }//GEN-LAST:event_r4CheckBoxActionPerformed

    private void r5CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r5CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 5);
    }//GEN-LAST:event_r5CheckBoxActionPerformed

    private void r6CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r6CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 6);
    }//GEN-LAST:event_r6CheckBoxActionPerformed

    private void r7CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r7CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 7);
    }//GEN-LAST:event_r7CheckBoxActionPerformed

    private void r8CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r8CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 8);
    }//GEN-LAST:event_r8CheckBoxActionPerformed

    private void r9CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r9CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 9);
    }//GEN-LAST:event_r9CheckBoxActionPerformed

    private void r10CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r10CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 10);
    }//GEN-LAST:event_r10CheckBoxActionPerformed

    private void r11CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r11CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 11);
    }//GEN-LAST:event_r11CheckBoxActionPerformed

    private void r12CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r12CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 12);
    }//GEN-LAST:event_r12CheckBoxActionPerformed

    private void r13CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r13CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 13);
    }//GEN-LAST:event_r13CheckBoxActionPerformed

    private void r14CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r14CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 14);
    }//GEN-LAST:event_r14CheckBoxActionPerformed

    private void r15CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r15CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 15);
    }//GEN-LAST:event_r15CheckBoxActionPerformed

    private void r16CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r16CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 16);
    }//GEN-LAST:event_r16CheckBoxActionPerformed

    private void r17CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r17CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 17);
    }//GEN-LAST:event_r17CheckBoxActionPerformed

    private void r18CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r18CheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 18);
    }//GEN-LAST:event_r18CheckBoxActionPerformed

    private void lResultantCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lResultantCheckBoxActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 19);
    }//GEN-LAST:event_lResultantCheckBoxActionPerformed

    private void rResultantCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rResultantCheckBox1ActionPerformed
        this.changeGraph((JCheckBox) evt.getSource(), 19);
    }//GEN-LAST:event_rResultantCheckBox1ActionPerformed

    public void changeGraph(JCheckBox checkBox, int sensor) {
        if (this.lockCheckBox.isSelected()) {
            if (checkBox.isSelected()) {
                this.leftGraphPanel.getSensors().put(sensor, new LinkedList<>());
                this.rightGraphPanel.getSensors().put(sensor, new LinkedList<>());
            } else {
                this.leftGraphPanel.getSensors().remove(sensor);
                this.rightGraphPanel.getSensors().remove(sensor);
            }
        } else if (checkBox.isSelected()) {
            if (this.ribbonTabbedPane.getSelectedIndex() == 0) {
                this.leftGraphPanel.getSensors().put(sensor, new LinkedList<>());
            } else {
                this.rightGraphPanel.getSensors().put(sensor, new LinkedList<>());
            }
        } else if (this.ribbonTabbedPane.getSelectedIndex() == 0) {
            this.leftGraphPanel.getSensors().remove(sensor);
        } else {
            this.rightGraphPanel.getSensors().remove(sensor);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }

            //Button
            UIManager.put("Button.background", ColourPalatte.DARK_BLUE);
            UIManager.put("Button.foreground", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("Button.border", BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
            UIManager.put("Button.focus", ColourPalatte.DARK_BLUE);
            UIManager.put("Button.font", new Font("Calibri", Font.PLAIN, 14));

            //Check box
            UIManager.put("CheckBox.background", ColourPalatte.VERY_DARK_BLUE);
            UIManager.put("CheckBox.foreground", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("CheckBox.interiorBackground", ColourPalatte.VERY_DARK_BLUE);
            UIManager.put("CheckBox.darkShadow", ColourPalatte.VERY_DARK_BLUE);
            UIManager.put("CheckBox.light", ColourPalatte.VERY_DARK_BLUE);
            UIManager.put("CheckBox.highlight", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("CheckBox.shadow", ColourPalatte.BRIGHT_WHITE);

            //Scroll pane
            UIManager.put("ScrollPane.border", BorderFactory.createEmptyBorder());

            //Scroll bar
            UIManager.put("ScrollBar.width", 20);
            //
            UIManager.put("ScrollBar.track", ColourPalatte.DARK_BLUE);
            UIManager.put("ScrollBar.trackForeground", ColourPalatte.VERY_DARK_BLUE);
            //
            UIManager.put("ScrollBar.thumb", ColourPalatte.VERY_DARK_BLUE);
            UIManager.put("ScrollBar.thumbHighlight", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("ScrollBar.thumbShadow", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("ScrollBar.thumbDarkShadow", ColourPalatte.BRIGHT_WHITE);

            //Tabbed pane
            UIManager.put("TabbedPane.focus", ColourPalatte.FONT_BLUE);
            UIManager.put("TabbedPane.selected", ColourPalatte.FONT_BLUE);
            UIManager.put("TabbedPane.contentOpaque", false);
            //
            UIManager.getDefaults().put("TabbedPane.contentBorderInsets", new Insets(0, 0, 0, 0));
            UIManager.getDefaults().put("TabbedPane.tabsOverlapBorder", false);
            //
            UIManager.put("TabbedPane.darkShadow", ColourPalatte.DARK_BLUE);
            UIManager.put("TabbedPane.shadow", ColourPalatte.DARK_BLUE);
            UIManager.put("TabbedPane.highlight", ColourPalatte.DARK_BLUE);

            //Slider
            UIManager.put("Slider.background", ColourPalatte.VERY_DARK_BLUE);
            UIManager.put("Slider.focus", ColourPalatte.VERY_DARK_BLUE);
            UIManager.put("Slider.border", BorderFactory.createLineBorder(ColourPalatte.VERY_DARK_BLUE, 1));
            UIManager.put("Slider.highlight", ColourPalatte.PALE_WHITE);
            UIManager.put("Slider.shadow", ColourPalatte.PALE_WHITE);

//            //List
//            UIManager.put("List.background", ColourPalatte.PALE_WHITE);
//            UIManager.put("List.font", new Font("Calibri", Font.PLAIN, 14));
//
//            //Table header
//            UIManager.put("TableHeader.background", ColourPalatte.DARK_BLUE);
//            UIManager.put("TableHeader.foreground", ColourPalatte.BRIGHT_WHITE);
//            UIManager.put("TableHeader.font", new Font("Calibri", Font.PLAIN, 14));
//
//            //Table
//            UIManager.put("Table.font", new Font("Calibri", Font.PLAIN, 14));
//            UIManager.put("Table.background", ColourPalatte.PALE_WHITE);
//            UIManager.put("Table.gridColor", ColourPalatte.DARK_BLUE);
//            UIManager.put("Table.focusSelectedCellHighlightBorder", BorderFactory.createEmptyBorder());
//
//            //Combo box
//            UIManager.put("ComboBox.border", BorderFactory.createEmptyBorder());
//            UIManager.put("ComboBox.buttonBackground", ColourPalatte.MEDIUM_BLUE);
//            UIManager.put("ComboBox.buttonDarkShadow", ColourPalatte.VERY_DARK_BLUE);
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton exportButton;
    private ui.panels.GraphPanel graphPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JCheckBox l10CheckBox;
    private javax.swing.JCheckBox l11CheckBox;
    private javax.swing.JCheckBox l12CheckBox;
    private javax.swing.JCheckBox l13CheckBox;
    private javax.swing.JCheckBox l14CheckBox;
    private javax.swing.JCheckBox l15CheckBox;
    private javax.swing.JCheckBox l16CheckBox;
    private javax.swing.JCheckBox l17CheckBox;
    private javax.swing.JCheckBox l18CheckBox;
    private javax.swing.JCheckBox l1CheckBox;
    private javax.swing.JCheckBox l2CheckBox;
    private javax.swing.JCheckBox l3CheckBox;
    private javax.swing.JCheckBox l4CheckBox;
    private javax.swing.JCheckBox l5CheckBox;
    private javax.swing.JCheckBox l6CheckBox;
    private javax.swing.JCheckBox l7CheckBox;
    private javax.swing.JCheckBox l8CheckBox;
    private javax.swing.JCheckBox l9CheckBox;
    private javax.swing.JCheckBox lResultantCheckBox;
    private ui.panels.LeftBackgroundPanel leftBackgroundPanel1;
    private ui.panels.LeftCanvasPanel leftCanvasPanel;
    private ui.panels.GraphPanel leftGraphPanel;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JScrollPane leftScrollPane;
    private javax.swing.JPanel leftSensorPanel;
    private javax.swing.JCheckBox lockCheckBox;
    private javax.swing.JCheckBox r10CheckBox;
    private javax.swing.JCheckBox r11CheckBox;
    private javax.swing.JCheckBox r12CheckBox;
    private javax.swing.JCheckBox r13CheckBox;
    private javax.swing.JCheckBox r14CheckBox;
    private javax.swing.JCheckBox r15CheckBox;
    private javax.swing.JCheckBox r16CheckBox;
    private javax.swing.JCheckBox r17CheckBox;
    private javax.swing.JCheckBox r18CheckBox;
    private javax.swing.JCheckBox r1CheckBox;
    private javax.swing.JCheckBox r2CheckBox;
    private javax.swing.JCheckBox r3CheckBox;
    private javax.swing.JCheckBox r4CheckBox;
    private javax.swing.JCheckBox r5CheckBox;
    private javax.swing.JCheckBox r6CheckBox;
    private javax.swing.JCheckBox r7CheckBox;
    private javax.swing.JCheckBox r8CheckBox;
    private javax.swing.JCheckBox r9CheckBox;
    private javax.swing.JCheckBox rResultantCheckBox1;
    private javax.swing.JTabbedPane ribbonTabbedPane;
    private ui.panels.RightBackgroundPanel rightBackgroundPanel1;
    private ui.panels.RightCanvasPanel rightCanvasPanel;
    private ui.panels.GraphPanel rightGraphPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JScrollPane rightScrollPane;
    private javax.swing.JPanel rightSensorPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton startButton;
    public static javax.swing.JLabel statusLabel;
    private javax.swing.JButton stopButton;
    private javax.swing.JPanel videoFeedPanel;
    private ui.panels.WebcamPanel webcamPanel;
    // End of variables declaration//GEN-END:variables
}
