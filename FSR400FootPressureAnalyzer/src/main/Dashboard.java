/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import connect.PortReader;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.UIManager;
import workers.CanvasPanelWorker;
import ui.ColourPalatte;
import ui.Notification;
import workers.BackgroundWorker;
import workers.GraphPanelWorker;

/**
 *
 * @author Ivantha
 */
public class Dashboard extends javax.swing.JFrame {

    private BackgroundWorker backgroundWorker = null;
    private CanvasPanelWorker canvasPanelWorker = null;
    private GraphPanelWorker graphPanelWorker = null;
    private static boolean portReaderNotStarted = true;

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();

        this.dashboardPanel.setBackground(ColourPalatte.VERY_DARK_BLUE);
        this.xLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.xValueLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.yLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.yValueLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
        Dashboard.statusLabel.setBackground(ColourPalatte.BRIGHT_WHITE);

        this.maxPLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.maxPPLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.minPLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.minPPLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.avgPLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.avgPPLabel.setForeground(ColourPalatte.BRIGHT_WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sensorButtonGroup = new javax.swing.ButtonGroup();
        dashboardPanel = new javax.swing.JPanel();
        backgroundPanel = new ui.panels.BackgroundPanel();
        canvasPanel = new ui.panels.CanvasPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        xLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        xValueLabel = new javax.swing.JLabel();
        yValueLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        maxPLabel = new javax.swing.JLabel();
        maxPTextField = new javax.swing.JTextField();
        maxPPLabel = new javax.swing.JLabel();
        maxPPTextField = new javax.swing.JTextField();
        avgPLabel = new javax.swing.JLabel();
        avgPTextField = new javax.swing.JTextField();
        minPLabel = new javax.swing.JLabel();
        minPTextField = new javax.swing.JTextField();
        minPPLabel = new javax.swing.JLabel();
        minPPTextField = new javax.swing.JTextField();
        avgPPLabel = new javax.swing.JLabel();
        avgPPTextField = new javax.swing.JTextField();
        midPanel = new javax.swing.JPanel();
        graphPanel = new ui.panels.GraphPanel();
        sensorpanel = new javax.swing.JPanel();
        s1RadioButton = new javax.swing.JRadioButton();
        s2RadioButton = new javax.swing.JRadioButton();
        s3RadioButton = new javax.swing.JRadioButton();
        s4RadioButton = new javax.swing.JRadioButton();
        s5RadioButton = new javax.swing.JRadioButton();
        s6RadioButton = new javax.swing.JRadioButton();
        s7RadioButton = new javax.swing.JRadioButton();
        s8RadioButton = new javax.swing.JRadioButton();
        s9RadioButton = new javax.swing.JRadioButton();
        s10RadioButton = new javax.swing.JRadioButton();
        s11RadioButton = new javax.swing.JRadioButton();
        s12RadioButton = new javax.swing.JRadioButton();
        s13RadioButton = new javax.swing.JRadioButton();
        s14RadioButton = new javax.swing.JRadioButton();
        s15RadioButton = new javax.swing.JRadioButton();
        averageRadioButton = new javax.swing.JRadioButton();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FSR400 Pressure Analyzer");
        setResizable(false);

        backgroundPanel.setBackground(new java.awt.Color(255, 255, 255));
        backgroundPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                backgroundPanelMouseMoved(evt);
            }
        });
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        canvasPanel.setOpaque(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("<max> kP");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("0 kP");

        javax.swing.GroupLayout canvasPanelLayout = new javax.swing.GroupLayout(canvasPanel);
        canvasPanel.setLayout(canvasPanelLayout);
        canvasPanelLayout.setHorizontalGroup(
            canvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(canvasPanelLayout.createSequentialGroup()
                .addGroup(canvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16))
                .addGap(0, 443, Short.MAX_VALUE))
        );
        canvasPanelLayout.setVerticalGroup(
            canvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(canvasPanelLayout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 570, Short.MAX_VALUE)
                .addComponent(jLabel17))
        );

        backgroundPanel.add(canvasPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        xLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        xLabel.setText("X:");

        yLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        yLabel.setText("Y:");

        xValueLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        xValueLabel.setText("<X>");

        yValueLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        yValueLabel.setText("<Y>");

        statusLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        statusLabel.setText("<status>");
        statusLabel.setOpaque(true);

        rightPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        rightPanel.setOpaque(false);

        maxPLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maxPLabel.setText("Max. pressure");

        maxPTextField.setEditable(false);
        maxPTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maxPTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        maxPPLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maxPPLabel.setText("Max. pressure position");

        maxPPTextField.setEditable(false);
        maxPPTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maxPPTextField.setText(" ");
        maxPPTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        avgPLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        avgPLabel.setText("Average pressure");

        avgPTextField.setEditable(false);
        avgPTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        avgPTextField.setText(" ");
        avgPTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        minPLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        minPLabel.setText("Min. pressure");

        minPTextField.setEditable(false);
        minPTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        minPTextField.setText(" ");
        minPTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        minPPLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        minPPLabel.setText("Min. pressure position");

        minPPTextField.setEditable(false);
        minPPTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        minPPTextField.setText(" ");
        minPPTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        avgPPLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        avgPPLabel.setText("Average pressure position");

        avgPPTextField.setEditable(false);
        avgPPTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        avgPPTextField.setText(" ");
        avgPPTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(avgPLabel)
                            .addComponent(avgPPLabel)
                            .addGroup(rightPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(avgPPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(avgPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(20, 20, 20))
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxPLabel)
                            .addComponent(minPLabel)
                            .addComponent(maxPPLabel)
                            .addGroup(rightPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(minPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(maxPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(maxPPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rightPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(minPPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(minPPLabel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(maxPLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maxPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maxPPLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maxPPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(minPLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minPPLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minPPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(avgPLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(avgPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(avgPPLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(avgPPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        midPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        midPanel.setOpaque(false);

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        sensorpanel.setOpaque(false);

        sensorButtonGroup.add(s1RadioButton);
        s1RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s1RadioButton.setSelected(true);
        s1RadioButton.setText("Sensor 1");
        s1RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s2RadioButton);
        s2RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s2RadioButton.setText("Sensor 2");
        s2RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s2RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s3RadioButton);
        s3RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s3RadioButton.setText("Sensor 3");
        s3RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s3RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s4RadioButton);
        s4RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s4RadioButton.setText("Sensor 4");
        s4RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s4RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s5RadioButton);
        s5RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s5RadioButton.setText("Sensor 5");
        s5RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s5RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s6RadioButton);
        s6RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s6RadioButton.setText("Sensor 6");
        s6RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s6RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s7RadioButton);
        s7RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s7RadioButton.setText("Sensor 7");
        s7RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s7RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s8RadioButton);
        s8RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s8RadioButton.setText("Sensor 8");
        s8RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s8RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s9RadioButton);
        s9RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s9RadioButton.setText("Sensor 9");
        s9RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s9RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s10RadioButton);
        s10RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s10RadioButton.setText("Sensor 10");
        s10RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s10RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s11RadioButton);
        s11RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s11RadioButton.setText("Sensor 11");
        s11RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s11RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s12RadioButton);
        s12RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s12RadioButton.setText("Sensor 12");
        s12RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s12RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s13RadioButton);
        s13RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s13RadioButton.setText("Sensor 13");
        s13RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s13RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s14RadioButton);
        s14RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s14RadioButton.setText("Sensor 14");
        s14RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s14RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(s15RadioButton);
        s15RadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        s15RadioButton.setText("Sensor 15");
        s15RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s15RadioButtonActionPerformed(evt);
            }
        });

        sensorButtonGroup.add(averageRadioButton);
        averageRadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        averageRadioButton.setText("Average");
        averageRadioButton.setEnabled(false);
        averageRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                averageRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sensorpanelLayout = new javax.swing.GroupLayout(sensorpanel);
        sensorpanel.setLayout(sensorpanelLayout);
        sensorpanelLayout.setHorizontalGroup(
            sensorpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sensorpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sensorpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(s1RadioButton)
                    .addComponent(s2RadioButton)
                    .addComponent(s3RadioButton)
                    .addComponent(s4RadioButton)
                    .addComponent(s5RadioButton)
                    .addComponent(s6RadioButton)
                    .addComponent(s7RadioButton)
                    .addComponent(s8RadioButton)
                    .addComponent(s9RadioButton)
                    .addComponent(s10RadioButton)
                    .addComponent(s11RadioButton)
                    .addComponent(s12RadioButton)
                    .addComponent(s13RadioButton)
                    .addComponent(s14RadioButton)
                    .addComponent(s15RadioButton)
                    .addComponent(averageRadioButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sensorpanelLayout.setVerticalGroup(
            sensorpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sensorpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(averageRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s1RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s2RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s3RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s4RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s5RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s6RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s7RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s8RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s9RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s10RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s11RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s12RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s13RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s14RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(s15RadioButton)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        startButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        startButton.setText("Start");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                startButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                startButtonMouseExited(evt);
            }
        });
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        stopButton.setText("Stop");
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stopButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stopButtonMouseExited(evt);
            }
        });
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout midPanelLayout = new javax.swing.GroupLayout(midPanel);
        midPanel.setLayout(midPanelLayout);
        midPanelLayout.setHorizontalGroup(
            midPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(midPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(midPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(midPanelLayout.createSequentialGroup()
                        .addComponent(sensorpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(graphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        midPanelLayout.setVerticalGroup(
            midPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(midPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(midPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sensorpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(graphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
        dashboardPanel.setLayout(dashboardPanelLayout);
        dashboardPanelLayout.setHorizontalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dashboardPanelLayout.createSequentialGroup()
                        .addComponent(xLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xValueLabel)
                        .addGap(50, 50, 50)
                        .addComponent(yLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yValueLabel))
                    .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(midPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dashboardPanelLayout.setVerticalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(dashboardPanelLayout.createSequentialGroup()
                        .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(xLabel)
                            .addComponent(xValueLabel)
                            .addComponent(yLabel)
                            .addComponent(yValueLabel)))
                    .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(midPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static boolean isPortReaderNotStarted() {
        return portReaderNotStarted;
    }

    public static void setPortReaderNotStarted(boolean portReaderNotStarted) {
        Dashboard.portReaderNotStarted = portReaderNotStarted;
    }

    private void startButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseEntered
        this.startButton.setBackground(ColourPalatte.LIGHT_BLUE);
        this.startButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.startButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_startButtonMouseEntered

    private void startButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseExited
        this.startButton.setBackground(ColourPalatte.DARK_BLUE);
        this.startButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.startButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_startButtonMouseExited

    private void stopButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseEntered
        this.stopButton.setBackground(ColourPalatte.LIGHT_BLUE);
        this.stopButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.stopButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_stopButtonMouseEntered

    private void stopButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseExited
        this.stopButton.setBackground(ColourPalatte.DARK_BLUE);
        this.stopButton.setForeground(ColourPalatte.BRIGHT_WHITE);
        this.stopButton.setBorder(BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
    }//GEN-LAST:event_stopButtonMouseExited

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        //Connect with the device
        if (portReaderNotStarted) {
            PortReader portReader = new PortReader();
            portReader.startReading();
        }
        
        if ((backgroundWorker == null || backgroundWorker.isCancelled()) && !portReaderNotStarted) {
            backgroundWorker = new BackgroundWorker();
            backgroundWorker.execute();
        }
        if ((canvasPanelWorker == null || canvasPanelWorker.isCancelled()) && !portReaderNotStarted) {
            canvasPanelWorker = new CanvasPanelWorker(this.canvasPanel);
            canvasPanelWorker.execute();
        }
        if ((graphPanelWorker == null || graphPanelWorker.isCancelled()) && !portReaderNotStarted) {
            graphPanelWorker = new GraphPanelWorker(this.graphPanel);
            graphPanelWorker.execute();
        } 
    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        Notification.display("Stopped reading sensor values");

        backgroundWorker.cancel(true);
        canvasPanelWorker.cancel(true);
        graphPanelWorker.cancel(true);
    }//GEN-LAST:event_stopButtonActionPerformed

    private void backgroundPanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundPanelMouseMoved
        int xValue = evt.getX() - 110;
        if (xValue >= 0) {
            this.xValueLabel.setText(String.valueOf(xValue));
        }
        this.yValueLabel.setText(String.valueOf(evt.getY()));
    }//GEN-LAST:event_backgroundPanelMouseMoved

    private void averageRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_averageRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_averageRadioButtonActionPerformed

    private void s1RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1RadioButtonActionPerformed
        graphPanel.setSensor(1);
        Notification.display("Analysing sensor 1");
    }//GEN-LAST:event_s1RadioButtonActionPerformed

    private void s2RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s2RadioButtonActionPerformed
        graphPanel.setSensor(2);
        Notification.display("Analysing sensor 2");
    }//GEN-LAST:event_s2RadioButtonActionPerformed

    private void s3RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s3RadioButtonActionPerformed
        graphPanel.setSensor(3);
        Notification.display("Analysing sensor 3");
    }//GEN-LAST:event_s3RadioButtonActionPerformed

    private void s4RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s4RadioButtonActionPerformed
        graphPanel.setSensor(4);
        Notification.display("Analysing sensor 4");
    }//GEN-LAST:event_s4RadioButtonActionPerformed

    private void s5RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s5RadioButtonActionPerformed
        graphPanel.setSensor(5);
        Notification.display("Analysing sensor 5");
    }//GEN-LAST:event_s5RadioButtonActionPerformed

    private void s6RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s6RadioButtonActionPerformed
        graphPanel.setSensor(6);
        Notification.display("Analysing sensor 6");
    }//GEN-LAST:event_s6RadioButtonActionPerformed

    private void s7RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s7RadioButtonActionPerformed
        graphPanel.setSensor(7);
        Notification.display("Analysing sensor 7");
    }//GEN-LAST:event_s7RadioButtonActionPerformed

    private void s8RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s8RadioButtonActionPerformed
        graphPanel.setSensor(8);
        Notification.display("Analysing sensor 8");
    }//GEN-LAST:event_s8RadioButtonActionPerformed

    private void s9RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s9RadioButtonActionPerformed
        graphPanel.setSensor(9);
        Notification.display("Analysing sensor 9");
    }//GEN-LAST:event_s9RadioButtonActionPerformed

    private void s10RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s10RadioButtonActionPerformed
        graphPanel.setSensor(10);
        Notification.display("Analysing sensor 10");
    }//GEN-LAST:event_s10RadioButtonActionPerformed

    private void s11RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s11RadioButtonActionPerformed
        graphPanel.setSensor(11);
        Notification.display("Analysing sensor 11");
    }//GEN-LAST:event_s11RadioButtonActionPerformed

    private void s12RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s12RadioButtonActionPerformed
        graphPanel.setSensor(12);
        Notification.display("Analysing sensor 12");
    }//GEN-LAST:event_s12RadioButtonActionPerformed

    private void s13RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s13RadioButtonActionPerformed
        graphPanel.setSensor(13);
        Notification.display("Analysing sensor 13");
    }//GEN-LAST:event_s13RadioButtonActionPerformed

    private void s14RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s14RadioButtonActionPerformed
        graphPanel.setSensor(14);
        Notification.display("Analysing sensor 14");
    }//GEN-LAST:event_s14RadioButtonActionPerformed

    private void s15RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s15RadioButtonActionPerformed
        graphPanel.setSensor(15);
        Notification.display("Analysing sensor 15");
    }//GEN-LAST:event_s15RadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }

            //Button
            UIManager.put("Button.background", ColourPalatte.DARK_BLUE);
            UIManager.put("Button.foreground", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("Button.border", BorderFactory.createLineBorder(ColourPalatte.BRIGHT_WHITE, 1));
            UIManager.put("Button.focus", ColourPalatte.DARK_BLUE);
            UIManager.put("Button.font", new Font("Calibri", Font.PLAIN, 14));

            //Radio button
            UIManager.put("RadioButton.background", ColourPalatte.VERY_DARK_BLUE);
            UIManager.put("RadioButton.focus", ColourPalatte.VERY_DARK_BLUE);
            UIManager.put("RadioButton.foreground", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("RadioButton.interiorBackground", ColourPalatte.VERY_DARK_BLUE);
            //
            UIManager.put("RadioButton.highlight", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("RadioButton.light", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("RadioButton.shadow", ColourPalatte.BRIGHT_WHITE);
            UIManager.put("RadioButton.darkShadow", ColourPalatte.BRIGHT_WHITE);

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Dashboard().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton averageRadioButton;
    private javax.swing.JLabel avgPLabel;
    private javax.swing.JLabel avgPPLabel;
    public static javax.swing.JTextField avgPPTextField;
    public static javax.swing.JTextField avgPTextField;
    private ui.panels.BackgroundPanel backgroundPanel;
    private ui.panels.CanvasPanel canvasPanel;
    private javax.swing.JPanel dashboardPanel;
    private ui.panels.GraphPanel graphPanel;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel maxPLabel;
    private javax.swing.JLabel maxPPLabel;
    public static javax.swing.JTextField maxPPTextField;
    public static javax.swing.JTextField maxPTextField;
    private javax.swing.JPanel midPanel;
    private javax.swing.JLabel minPLabel;
    private javax.swing.JLabel minPPLabel;
    public static javax.swing.JTextField minPPTextField;
    public static javax.swing.JTextField minPTextField;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JRadioButton s10RadioButton;
    private javax.swing.JRadioButton s11RadioButton;
    private javax.swing.JRadioButton s12RadioButton;
    private javax.swing.JRadioButton s13RadioButton;
    private javax.swing.JRadioButton s14RadioButton;
    private javax.swing.JRadioButton s15RadioButton;
    private javax.swing.JRadioButton s1RadioButton;
    private javax.swing.JRadioButton s2RadioButton;
    private javax.swing.JRadioButton s3RadioButton;
    private javax.swing.JRadioButton s4RadioButton;
    private javax.swing.JRadioButton s5RadioButton;
    private javax.swing.JRadioButton s6RadioButton;
    private javax.swing.JRadioButton s7RadioButton;
    private javax.swing.JRadioButton s8RadioButton;
    private javax.swing.JRadioButton s9RadioButton;
    private javax.swing.ButtonGroup sensorButtonGroup;
    private javax.swing.JPanel sensorpanel;
    private javax.swing.JButton startButton;
    public static javax.swing.JLabel statusLabel;
    private javax.swing.JButton stopButton;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel xValueLabel;
    private javax.swing.JLabel yLabel;
    private javax.swing.JLabel yValueLabel;
    // End of variables declaration//GEN-END:variables
}
